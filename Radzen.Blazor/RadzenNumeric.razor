@using Radzen
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components.Forms
@using System.Globalization
@typeparam TValue
@inherits FormComponentWithAutoComplete<TValue>

@if (Visible)
{
    <span @ref="@Element" style="@Style" @attributes="Attributes" class="@GetCssClass()" id="@GetId()">
        <input @ref="@input" @attributes="InputAttributes" type="text" inputmode="decimal" name="@Name" disabled="@Disabled" readonly="@ReadOnly"
               class="@GetInputCssClass()" tabindex="@(Disabled ? "-1" : $"{TabIndex}")" id="@Name"
               placeholder="@CurrentPlaceholder" autocomplete="@AutoCompleteAttribute" aria-autocomplete="@AriaAutoCompleteAttribute" value="@FormattedValue" @onchange="@OnChange"
               onkeypress="Radzen.numericKeyPress(event, @IsInteger().ToString().ToLower(), '@CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator')"
               onblur="@getOnInput()" onpaste="@getOnPaste()"
               @onkeydown="@(args => OnKeyPress(args))" @onkeydown:preventDefault=preventKeyPress @onkeydown:stopPropagation />

        @if (ShowUpDown)
        {
            <button type="button" class="rz-numeric-button rz-numeric-up rz-button" tabindex="-1"
                    @onclick="@((args) => UpdateValueWithStep(true))">
                <span class="rz-numeric-button-icon rzi rzi-caret-up"></span>
            </button>
            <button type="button" class="rz-numeric-button rz-numeric-down rz-button" tabindex="-1"
                    @onclick="@((args) => UpdateValueWithStep(false))">
                <span class="rz-numeric-button-icon rzi rzi-caret-down"></span>
            </button>
        }
    </span>
}
